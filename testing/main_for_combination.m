% main - main pipeline for training b with a training set from
% 'data/set_train' folder and submission of test values from
% 'data/set_train folder. Train_b is optimized for best r_squared
% (coefficient of determination).

%% choose functions
fun1 = 'feature_extract12';
fun2 = 'feature_extract13';
fun3 = 'feature_extract11';
fun4 = 'feature_extract_intensity_limits_1';
fun5 = 'feature_extract_3peaks';

%% choose parameters
parameters1 = struct('up', 1,...
                    'down',1,...
                    'centerpoint', 0, ...
                    'offset', 0,...
                    'target', 335);
parameters2 = struct('up', 20,...
                    'down',20,...
                    'centerpoint', 620,...
                    'offset', 95,...
                    'target', 0);
parameters3 = struct('up', 20,...
                    'down',20,...
                    'centerpoint', 590,...
                    'offset', 70,...
                    'target', 0);
parameters4 = struct('up', 1,...
                    'down',1,...
                    'threshold', 730,...
                    'limits', 5,...
                    'target', 0);
parameters5 = struct('cgone', 220, ...
                     'cgtwo', 750, ...
                     'cgthree', 1450, ...
                     'rangeone', 50, ...
                     'rangetwo', 35, ...
                     'rangethree', 110);

%% generate train data matrix
X1 = generate_X('data/set_train', fun1, parameters1);
X2 = generate_X('data/set_train', fun2, parameters2);  
X3 = generate_X('data/set_train', fun3, parameters3); 
X4 = generate_X('data/set_train', fun4, parameters4); 
X5 = generate_X('data/set_train', fun5, parameters5);

X = [X1, ...
     X2, ...
     X3, ...
     X4, ...
     X5];

%% generate test data matrix
XX1 = generate_X('data/set_test', fun1, parameters1);
XX2 = generate_X('data/set_test', fun2, parameters2);  
XX3 = generate_X('data/set_test', fun3, parameters3); 
XX4 = generate_X('data/set_test', fun4, parameters4); 
XX5 = generate_X('data/set_test', fun5, parameters5); 

XX = [XX1, ...
     XX2, ...
     XX3, ...
     XX4, ...
     XX5];

%% optimize model
Y = csvread('data/targets.csv');
m = stepwiseglm([X5, X5.^2, X5.^3], Y, 'poly111111111', 'Criterion', 'bic', 'Exclude', [], 'Distribution', 'inverse gaussian');

%% write predicted y
y_hat = predict(m, [XX5, XX5.^2, XX5.^3]);

if exist('data/submit.csv', 'file') == 2
    delete('data/submit.csv');
end

% constructs appropriate format for csv submission 
y_length = length(y_hat);
data_matrix = [(1 : y_length)', y_hat];
submission_title = {'ID', 'Prediction'};
submit = [submission_title; num2cell(data_matrix)];

% write matrix to csv file
cell2csv('data/submit.csv',submit);